How the Compiler's Source Code is Organized
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can use the compiler without any of the following information, but
if you want to hack on the compiler, this information may help.

The source code of the compiler is split into different directories. 
The top level mkfile knows the dependencies between them and makes
them in the right order.  Files shared by many directories go into the
lib/ directory which is initially empty.  Once all shared files are in
place development can be continued in the sub-directories and the
mkfiles provided there. Refer to the mkfiles for the high level
targets available in each directory. The doc/ directory includes an
overview document index.nw.

In alphabetical order:


    asdl/       OCaml sources for the runtime system of AsdlGen
                generated code.
    
    aug99/      Sources for an earlier implementation of c--. Not used
                and interesting only for historical reasons.
    
    bin/        Initially empty. Contains binary after compilation.
    
    camlburg/   A burg implementation for OCaml; comes with its own
                documentation.

    cllib/      Library of OCaml modules for pretty printing and
                and parsing.

    config/     Global rule set for compiling OCaml sources and other 
                global files.
    
    doc/        Various documents, manual pages, also an overview and design
                problems.
    
    examples/   Some c-- sources. Currently empty.
    
    figures/    PostScript figures used for documentation.

    gen/        Machine generated files. 
    
    interp/     Interpreter for C--. 

    lib/        Initially empty. Contains library modules during
                compilation.
    
    lua/        An interpreter for the embedded script language Lua.
    
    man/        Initially empty. Contains manual page after
                compilation. 

    mk/         C implementation of the make-like tool mk.

    rtl/        RTL type definition.

    runtime/    The Quick C-- run-time system

    specialized/ Partially evaluated compiler sources.

    src/        Main sources for the c-- compiler.

    tdpe/       Code for partial evaluation of the compiler, see README.
                Not yet updated for Ocaml 3.04 label mode. However, this
                code is currently by default not compiled and linked.
    
    test2/      Code for testing.

    tools/      Small tools: OCamlError, NoFake, Grades.

Directories depend on each other in the following order:

    cllib lua asdl rtl gen camlburg tools src runtime test2
